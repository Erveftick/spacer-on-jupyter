(declare-fun inv (Int Int) Bool)
(declare-fun var5000 () Int)
(declare-fun fail () Bool)
(declare-fun var10000 () Int)
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(rule (=> (and (= B 0) (= A var5000)) (inv B A)))
(rule (let ((a!1 (and (inv D C) (= B (+ D 1)) (= A (ite (>= D var5000) (+ C 1) C)))))
  (=> a!1 (inv B A))))
(rule (=> (and (inv A B) (= A var10000) (not (= B A))) fail))
(declare-rel q!!1667 ())
(assert (=> fail q!!1667))
(query q!!1667)

